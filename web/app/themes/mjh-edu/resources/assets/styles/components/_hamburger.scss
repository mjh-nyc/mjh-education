/* stylelint-disable */
@charset "UTF-8";
/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */

// Settings
// ==================================================
$hamburger-padding-x                       : 0 !default;
$hamburger-padding-y                       : 0 !default;
$hamburger-layer-width                     : 28px !default;
$hamburger-layer-height                    : 3px !default;
$hamburger-layer-spacing                   : 6px !default;
$hamburger-layer-color                     : $text-color;
$hamburger-hover-layer-color               : $text-color;
$hamburger-layer-color-home                : #FFF !default;
$hamburger-hover-layer-color-home          : #FFF !default; 
$hamburger-layer-border-radius             : 0 !default;
$hamburger-hover-opacity                   : 0.7 !default;
$hamburger-hover-scale                     : 0.9 !default;
$hamburger-hover-transition-duration       : 0.25s !default;
$hamburger-hover-transition-timing-function: ease !default;

// To use CSS filters as the hover effect instead of opacity,
// set $hamburger-hover-use-filter as true and
// change the value of $hamburger-hover-filter accordingly.

// Types (Remove or comment out what you donâ€™t need)
// ==================================================
$hamburger-types: (
  spin
) !default;

// Hamburger
// ==================================================
.hamburger {
  padding: $hamburger-padding-y 0 $hamburger-padding-y 15px;
  @include media-breakpoint-up(md) {
    padding: $hamburger-padding-y $hamburger-padding-x;
  }
  display: inline-block;
  cursor: pointer;

  transition-property: all;
  transition-duration: $hamburger-hover-transition-duration;
  transition-timing-function: $hamburger-hover-transition-timing-function;

  // Normalize (<button>)
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  border-radius: 40px;
  margin: 0;
  overflow: visible;

  &:hover {
    .hamburger-box {
      transform: scale($hamburger-hover-scale);
    }
  }
}

.hamburger-box {
  width: $hamburger-layer-width;
  height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;
  display: inline-block;
  position: relative;
  transition-property: all;
  transition-duration: $hamburger-hover-transition-duration;
  transition-timing-function: $hamburger-hover-transition-timing-function;
}

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: $hamburger-layer-height / -2;

  &,
  &::before,
  &::after {
    width: $hamburger-layer-width;
    height: $hamburger-layer-height;
    background-color: $hamburger-layer-color;
    border-radius: $hamburger-layer-border-radius;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.25s;
    transition-timing-function: ease;
  }

  &::before,
  &::after {
    content: "";
    display: block;
  }

  &::before {
    top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
  }

  &::after {
    bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
  }
}
.home .hamburger-inner {
  &,
  &::before,
  &::after {
    background-color: $hamburger-layer-color-home;
  }
}

/*
  * Spin
  */
.hamburger--spin {
  .hamburger-inner {
    transition-duration: 0.22s;
    transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);

    &::before {
      transition: top 0.1s 0.25s ease-in,
                  opacity 0.1s ease-in;
    }

    &::after {
      transition: bottom 0.1s 0.25s ease-in,
                  transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    }
  }

  &.is-active {
    .hamburger-inner {
      transform: rotate(225deg);
      transition-delay: 0.12s;
      transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);

      &::before {
        top: 0;
        opacity: 0;
        transition: top 0.1s ease-out,
                    opacity 0.1s 0.12s ease-out;
      }

      &::after {
        bottom: 0;
        transform: rotate(-90deg);
        transition: bottom 0.1s ease-out,
                    transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
      }
      
      &,
      &::before,
      &::after {
        background-color: $hamburger-layer-color-home;
      }

    }
  }
}
